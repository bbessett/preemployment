.text-center {
  text-align: center;
}

::selection {
  background: #0FC3EA;
  /* WebKit/Blink Browsers */
  color: #fff;
}

::-moz-selection {
  background: #0FC3EA;
  /* Gecko Browsers */
  color: #fff;
}

p {
  font-size: 1.2em;
}

ul li {
  list-style: none;
}

a.btn,
.btn {
  text-transform: none;
  font-family: 'Intro';
}

.h1, .h2, .h3, .h4, h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  font-family: "Intro";
}

.heading {
  margin-top: calc(1.505rem + 3.06vw);
  margin-bottom: calc(1.505rem + 3.06vw);
  font-size: calc(1.403rem + 1.836vw);
}

@media (min-width: 1200px) {
  .heading {
    margin-top: 3.8rem;
  }
}

@media (min-width: 1200px) {
  .heading {
    margin-bottom: 3.8rem;
  }
}

@media (min-width: 1200px) {
  .heading {
    font-size: 2.78rem;
  }
}

a {
  color: #017494;
}

a:hover {
  color: #0FC3EA;
}

svg {
  fill: currentColor;
}

@media (min-width: 120em) {
  html {
    font-size: 16px;
  }
}

svg[hidden] {
  display: block;
  height: 0;
  position: absolute;
  width: 0;
  z-index: -1;
}

html blockquote,
html ol,
html ul {
  margin: 1em auto 0;
  padding: 0;
}

html section.callout p {
  max-width: 37.577em;
  font-size: 1.2em;
}

html .h1,
html h1 {
  font-size: calc(1.2868rem + 0.4416vw);
  font-weight: 800;
  line-height: 1.333;
  margin-bottom: 0.5em;
}

@media (min-width: 1200px) {
  html .h1,
  html h1 {
    font-size: 1.618rem;
  }
}

@media (min-width: 32em) {
  html .h1,
  html h1 {
    font-size: calc(1.618em + 1vw);
    line-height: 1.2;
  }
}

@media (min-width: 60em) {
  html .h1,
  html h1 {
    font-size: 2.618em;
  }
}

html .h1 small,
html h1 small {
  font-size: 80%;
  display: block !important;
}

@media (min-width: 60em) {
  html .h1 small,
  html h1 small {
    font-size: 70%;
  }
}

html .h2,
html h2 {
  font-size: calc(1.2668rem + 0.2016vw);
  line-height: 1.333;
  font-weight: 600;
}

@media (min-width: 1200px) {
  html .h2,
  html h2 {
    font-size: 1.418rem;
  }
}

html .title-large-txt {
  font-size: calc(1.475rem + 2.7vw);
}

@media (min-width: 1200px) {
  html .title-large-txt {
    font-size: 3.5rem;
  }
}

html .h3,
html h3 {
  font-size: calc(1.255rem + 0.06vw);
  line-height: 1.333;
  font-family: "IntroBold", sans-serif;
}

@media (min-width: 1200px) {
  html .h3,
  html h3 {
    font-size: 1.3rem;
  }
}

html .h4,
html h4 {
  font-size: 1.1rem;
  line-height: 1.4;
}

html .section {
  padding-top: 10rem;
  padding-bottom: 10rem;
}

html .iframe-container {
  overflow: hidden;
  padding-top: 56.25%;
  position: relative;
}

html .iframe-container iframe {
  border: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

html .text-module__content .text-module__text p > img {
  margin: 10px 0;
}

@media screen and (min-width: 768px) {
  html .text-module__content .text-module__text > p {
    margin: 0 0 20px;
  }
}

html .text-module__content .text-module__text img {
  width: 100%;
  height: auto;
}

html .text-module__content .text-module__text ul {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

html .text-module__content .text-module__text ul li {
  font-size: 1.2em;
  line-height: 2em;
}

html .text-module__content .text-module__text p {
  font-size: 1.2em;
  line-height: 2em;
}

html .text-module__content .text-module__text p small {
  line-height: 1.1em;
}

html .text-module__content .text-module__text small {
  line-height: 1.1em;
}

.text-module__content .text-module__text ol {
  margin-top: 2rem !important;
  margin-bottom: 2rem !important;
  margin-left: 40px !important;
}

.text-module__content .text-module__text ol li {
  font-size: 1.2em;
  line-height: 2em;
}

.component-hero-short .hero-bg {
  position: absolute;
  top: 0;
  height: 295px;
  width: 100%;
  background-size: auto;
  background-position: left center;
  z-index: 2;
}

.text-module__content ul li:before {
  content: "\2022";
  float: left;
  width: 15px;
  margin-top: 1px;
  margin-left: -15px;
  font-size: 22px;
  color: #00A6CA;
}

.text-module__content ul li {
  margin-left: 30px;
  list-style: none !important;
}

.text-module__content h1 {
  margin-top: 30px;
}

.text-module__content h3 {
  font-size: 1.4em;
  line-height: 1.333;
  font-weight: 400 !important;
}

p.sm-txt {
  line-height: 0.8em;
}

p small {
  font-style: italic;
  line-height: 1em;
}

.text-module__content span.hash {
  font-size: 1.4em;
  font-weight: bold;
  word-wrap: break-word;
}

@media (min-width: 768px) {
  .hash {
    margin-top: 10px;
    font-size: 2em;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
